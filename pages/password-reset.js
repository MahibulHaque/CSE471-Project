import { getCookie } from "cookies-next";
import Head from "next/head";
import jwt from "jsonwebtoken";
import User from "../models/User";
import dynamic from "next/dynamic";
import Navbar from "../components/Navbar";
import PasswordResetScreen from "../components/PasswordResetScreen";
import { useEffect } from "react";
import { useUserContext } from "../Contexts/UserContext";

const Footer = dynamic(() => import("../components/Footer"), {
  ssr: false,
  loading: () => <div />,
});

export default function Home({ email, name, image }) {
  const { userUpdater } = useUserContext();
  const userInfo = { name: name, email: email, image: image };
  useEffect(() => {
    userUpdater(userInfo);
  }, []);
  return (
    <div>
      <Head>
        <title>Open Robotics</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />
      <PasswordResetScreen />
      <Footer />
    </div>
  );
}

export async function getServerSideProps({ req, res }) {
  try {
    const token = getCookie("user-token", { req, res });
    if (token) {
      const verified = jwt.verify(token, process.env.JWT_SECRET);
      const obj = await User.findOne({ _id: verified.id });

      if (obj) {
        return {
          props: {
            email: obj.email,
            name: obj.username,
            image: obj.imageUrl,
          },
        };
      }
    }
    return { props: {} };
  } catch (error) {
    return { props: {} };
  }
}
